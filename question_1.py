# При представлении числа в двоичной системе счисления, младший разряд
# является признаком четности/нечетности числа. В данном алгоритме
# используется операция логического умножения, на заданное число накладывается
# маска, которая определяет значение только младшего разряда и в соответсвии
# с ним возвращает ответ.
# Данный алгоритм работает быстрее, чем алгоритм приведенный в задании, т.к.
# операция деления гораздо дороже, чем операция умножения.
def isEven(value):
      return value & 1 == 0


# В данном алгоритме из заданного числа выделяется младший разряд и
# проверяется его вхождение в множество четных чисел.
# Сложность проверки вхождения в множество составляет O(1) т.к. множества в
# Python реализованы с помощью хеш-таблиц. Но в целом данный алгоритм работает
# медленнее, чем алгоритм приведенный в задании из-за необходимости выделения
# младшего разряда.
def isEven2(value):
      even = {0, 2, 4, 6, 8}
      last_num = int(str(value)[-1])
      return last_num in even
